(function(root, factory) {
    'use strict';

    if (typeof define === 'function' && define.amd) {
        define([], function() {
            return (root.BitWindow = factory());
        });
    } else if (typeof module === 'object' && module.exports) {
        module.exports = root.BitWindow = factory();
    } else {
        root.BitWindow = factory();
    }
})(this, function() {

    let BitWindow = {};
        BitWindow.current = {};

    let $defaults = 
    {
        target:             null,
        position:          'center',
        clickEvent:         null,
        isModal:            true,
        isDrag:             true,
        showHeader:         true,
        cornerRadius:       '5px',
        headerColor:        '#f1f3f4',
        headerIcon:         'notes',
        headerLabel:        null,
        headerLabelColor:   '#5f6368',
        actions:            null
    };

    let icons = 
    {
        arrow_down:     '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',
        close:          'iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAAAXNSR0IArs4c6QAAB9RJREFUeF7tnVGW2kYQRZs4C8E7mdkJJycfsw3vgo94LHsjzlJYSHzIUQYFRgNIXV0lVFV3fq1G1Hv30oAwbAp/JJA4gU3i2RmdBAoCAEHqBBAgdf0MjwAwkDoBBEhdP8MjAAykTgABUtfP8AgAA6kTQIDU9TM8AsBA6gQQIHX9DI8AMJA6AQRIXT/DIwAMpE4AAVLXz/AIAAOpE0CA1PUzPALAQOoEECB1/QyPADCQOgEESF0/wyMADKROAAFS18/wCAADqRNAgNT1MzwCwEDqBBAgdf0MjwAwkDoBBEhdP8MjAAykTgABUtfP8AgAA6kTQIDU9TM8AsBA6gQQIHX9DI8AMJA6AQRIXT/DIwAMpE4AAVLXz/AIAAOpEwghwO7Pl6fyTzl03f6Qus2Fht/tXrblt/LUve67hU5pdhr3AvTwH4/lZynlsPlVnpHAjJX/briH//ipfCulbI/H0v143X+xPaPtrbsW4AL+ISUkMOTlAv6n02kO3iVwK8AV+JFgWfj/z9uzBC4FuAM/EhhIcOWRf3wWtzuBOwFmwI8EihLMgN/1TuBKgAr4kUBBggr43UrgRgAB/EjQIIEAfpcSuBCgAX4kEEjQAP8572P54uE6gQ8B3t577t/r3wr6RIKK0BTg7892+P51/7nitA871IUAFxdgkMAQlWzw91G6EQAJDMl/f4V3uMglOaGbR/5hOFcCIIGEyek1GR/53QqABNNA1xyRGX53T4Euiz0Vx2uCGtpHx2aH37UA7AQN5Cd+zj9Ozd1rgPEA7AT1IvDIf87MvQDsBHUCAP/7vEIIgATzJAD+jzmFEQAJ7ksA/NfzCSUAElwvGfhvPziEEwAJ3pcN/Pd3xpACIMFb6cA//doorADZJQD+afjdXwibM2LG6wTAP4eMt2NC7wBDDJkkAP758KcRIMvTIeCvgz+VANElAP56+NMJEFUC4JfBn1KAaBIAvxz+tAJEkQD42+BPLYB3CYC/Hf70AniVAPh14EeAU46erhMAvx78CHCRpQcJgF8XfgQY5blmCYBfH34EuJLpGiUAfhv4EeBGrmuSAPjt4EeAO9muQQLgt4UfASbyfaQEwG8PPwLMyPgREgD/jGKUDknx/wFas1pSAuBvbatuPQLMzGsJCYB/ZhmKhyFARZiWEgB/RRGKhyJAZZgWEgB/ZQmKhyOAIExNCfrTHz+Vb6WUVL/MIojdZAkCCGPVkqD/QTngF5agsAwBGkJUkqDhHvj5NcaWIS3XIkBjug+UwN0P0jVGbbIcARRifYAEwK/QG1eClULsb2ZBCYBfsTd2AMUwF5AA+BX7YgdQDtN4JwB+g77YAQxCNdgJgN+gJ3YAo1CVdwLgN+yJHcAoXKWPN/T37rD5VZ67bt9fMONPOQEEUA704tG/9eMNl/cMCQx64imQQaiKj/zje4cEBn2xAyiGagj/cC+RQLEvdgDFMBeAHwkU+xpuih1AIdQF4UcChb4ubwIBGgN9APxI0NgZAigF+ED4kUCpQ3YAYZBK8A/v7W+Fd6NfxgvjhvAQQBCeFvzfv+4/K31sAgkEPfIukCA0TfiH0yOBoAilJewAFUFawI8EFQUYHIoAM0O1hB8JZpZgcBgCzAh1CfiRYEYRBocgwESoS8KPBAaET9wkAtwJ6BHwI8GyEiDAjbwfCT8SLCcBAlzJeg3wI8EyEiDAKOc1wY8E9hIgwEXGa4QfCWwlQIBTvmuGHwnsJECA87e6tf4f3kW+vYGPTejKkF4AD4/848qRQE+C1AJ4hJ+nQ3rw97eUVgDP8COBngQpBYgAPxLoSJBOgEjwI0G7BKkEiAg/ErRJkEaAyPAjgVyCFAJkgB8JZBKEFyAT/EhQL0FoATLCjwR1EoQVIDP8SDBfgpACAP8ZAD42cV+GcAIA/8fCkeC2BKEEAP7bRSPB9WzCCAD80897keBjRiEEAP5p+HlhHHQHAP758CNBsB0A+OvhR4L3mbl9CgT8cviR4JydSwGAvx1+JHhLwJ0AwK8HPxI4EwD49eHPLoGbHQD47eDPLIELAYDfHv6sEvgQ4I+X3XFT+i+ukv4t8qVV0ju3tnUaV4w3m/Lc/bX/e22zje+PCwH6O72TSwD8AgpbJPACv7t3gQQSAL8A/panQ57gdydA5U4A/A3wSyTwBr9LAWZKAPwK8NdI4BF+twJMSAD8ivDPkcAr/K4FuCEB8BvAf08Cz/C7F2AkAfAbwn9NAu/whxBgkKB73XcL9M8pTj8oUn4vWw/v808V5uY6wNQg/DsJSBJAAElqrAmTAAKEqZJBJAkggCQ11oRJAAHCVMkgkgQQQJIaa8IkgABhqmQQSQIIIEmNNWESQIAwVTKIJAEEkKTGmjAJIECYKhlEkgACSFJjTZgEECBMlQwiSQABJKmxJkwCCBCmSgaRJIAAktRYEyYBBAhTJYNIEkAASWqsCZMAAoSpkkEkCSCAJDXWhEkAAcJUySCSBBBAkhprwiSAAGGqZBBJAgggSY01YRJAgDBVMogkAQSQpMaaMAkgQJgqGUSSAAJIUmNNmAQQIEyVDCJJAAEkqbEmTAIIEKZKBpEkgACS1FgTJgEECFMlg0gSQABJaqwJkwAChKmSQSQJIIAkNdaESQABwlTJIJIEEECSGmvCJIAAYapkEEkCCCBJjTVhEkCAMFUyiCSBfwF6rooM3h2GEgAAAABJRU5ErkJggg==',
        danger:         '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',
        info:           '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',
        menu:           'iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAAAXNSR0IArs4c6QAAA/lJREFUeF7t3TEOwjAABMHkpRQ0PImGgpeC8oVYlmzt0Af59m47KzkPPwTCBM5wdtEROAhgBGkCBEjXLzwBbCBNgADp+oUngA2kCRAgXb/wBLCBNAECpOsXngA2kCZAgHT9whPABtIECJCuX3gC2ECaAAHS9QtPABtIEyBAun7hCWADaQIESNcvPAFsIE2AAOn6hSeADaQJECBdv/AEsIE0AQKk6xeeADaQJkCAdP3CE8AG0gQIkK5feALYQJoAAdL1C08AG0gTIEC6fuEJYANpAgRI1y88AWwgTYAA6fqFJ4ANpAkQIF2/8ASwgTQBAqTrF54ANpAmQIB0/cITwAbSBAiQrl94AthAmgAB0vULP12Ax/P1gxmBuwS+n/fUjU798ys0Ae5W77mLAAHsIE2AAOn6hSeADaQJECBdv/AEsIE0AQKk6xeeADaQJkCAdP3CE8AG0gQIkK5f+O0FUCECKxOYfhdo5fDOhgABbCBNgADp+oUngA2kCRAgXb/wBLCBNAECpOsXngA2kCZAgHT9whPABtIECJCuX3gC2ECaAAHS9QtPABtIEyBAun7hCWADaQIESNcvPAFsIE2AAOn6hSeADaQJECBdv/AEsIE0AQKk6xeeADaQJkCAdP3CE8AG0gQIkK5feALYQJoAAdL1Cz9dAB/KNrIRAtu/Hp0AI/V7lgA2kCZAgHT9whPABtIECJCuX3gC2ECaAAHS9QtPABtIEyBAun7hCWADaQIESNcv/PYCqBCBlQlMvwy3cnhnQ4AANpAmQIB0/cITwAbSBAiQrl94AthAmgAB0vULTwAbSBMgQLp+4QlgA2kCBEjXLzwBbCBNgADp+oUngA2kCRAgXb/wBLCBNAECpOsXngA2kCZAgHT9whPABtIECJCuX3gC2ECaAAHS9QtPABtIEyBAun7hCWADaQIESNcvPAFsIE2AAOn6hZ8ugA9lG9kIge1fj06Akfo9SwAbSBMgQLp+4QlgA2kCBEjXLzwBbCBNgADp+oUngA2kCRAgXb/wBLCBNAECpOsXfnsBVIjAygSmX4ZbObyzIUAAG0gTIEC6fuEJYANpAgRI1y88AWwgTYAA6fqFJ4ANpAkQIF2/8ASwgTQBAqTrF54ANpAmQIB0/cITwAbSBAiQrl94AthAmgAB0vULTwAbSBMgQLp+4QlgA2kCBEjXLzwBbCBNgADp+oUngA2kCRAgXb/wBLCBNAECpOsXngA2kCZAgHT9whPABtIECJCuX3gC2ECaAAHS9QtPABtIEyBAun7hCWADaQIESNcvPAFsIE2AAOn6hSeADaQJECBdv/AEsIE0AQKk6xeeADaQJkCAdP3CE8AG0gQIkK5f+D8RaZDBd6MLbAAAAABJRU5ErkJggg==',
        notes:          'iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAAAXNSR0IArs4c6QAABIhJREFUeF7t3TFOXFEUBFFYqQMnXpITB6zUFhtwwNUX06pDPo/b1V3ZCN7f/CAQJvAezi46Am8EMII0AQKk6xeeADaQJkCAdP3CE8AG0gQIkK5feALYQJoAAdL1C08AG0gTIEC6fuEJYANpAgRI1y88AWwgTYAA6fqFJ4ANpAkQIF2/8ASwgTQBAqTrF54ANpAmQIB0/cITwAbSBAiQrl94AthAmgAB0vULTwAbSBMgQLp+4QlgA2kCBEjXLzwBbCBNgADp+oUngA2kCRAgXb/wBLCBNAECpOsXngA2kCZAgHT9whPABtIECJCuX3gC2ECaAAHS9QtPABtIEyBAun7hCWADaQIESNcvPAFsIE2AAOn6hX9cgB8/f/2FGYGvEvj48/vRjT76+GdoAny1ep/7JEAAO0gTIEC6fuEJYANpAgRI1y88AWwgTYAA6fqFJ4ANpAkQIF2/8ASwgTQBAqTrF35eABUi8MoEHv8u0CuHdxsCBLCBNAECpOsXngA2kCZAgHT9whPABtIECJCuX3gC2ECaAAHS9QtPABtIEyBAun7hCWADaQIESNcvPAFsIE2AAOn6hSeADaQJECBdv/AEsIE0AQKk6xeeADaQJkCAdP3CE8AG0gQIkK5feALYQJoAAdL1C08AG0gTIEC6fuEJYANpAgRI1y/84wL4R9lGdiEw/+fRCXCp32cJYANpAgRI1y88AWwgTYAA6fqFJ4ANpAkQIF2/8ASwgTQBAqTrF54ANpAmQIB0/cLPC6BCBF6ZwONfhnvl8G5DgAA2kCZAgHT9whPABtIECJCuX3gC2ECaAAHS9QtPABtIEyBAun7hCWADaQIESNcvPAFsIE2AAOn6hSeADaQJECBdv/AEsIE0AQKk6xeeADaQJkCAdP3CE8AG0gQIkK5feALYQJoAAdL1C08AG0gTIEC6fuEJYANpAgRI1y88AWwgTYAA6fqFf1wA/yj7e0f29J8X/950999OgDvDl36BAP+vhwAvPd/7cQQgwH1Fwy8QgADD872fTgAC3Fc0/AIBCDA83/vpBCDAfUXDLxCAAMPzvZ9OAALcVzT8AgEIMDzf++kEIMB9RcMvEOCbBRjejtMDBB7/KkSAoYjDBAgwXJ7T7wQIcGfohWECBBguz+l3AgS4M/TCMAECDJfn9DsBAtwZemGYAAGGy3P6nQAB7gy9MEyAAMPlOf1OgAB3hl4YJkCA4fKcfidAgDtDLwwTIMBweU6/EyDAnaEXhgkQYLg8p98JEODO0AvDBAgwXJ7T7wQIcGfohWECBBguz+l3AgS4M/TCMAECDJfn9DsBAtwZemGYAAGGy3P6nQAB7gy9MEyAAMPlOf1OgAB3hl4YJkCA4fKcfidAgDtDLwwTIMBweU6/EyDAnaEXhgkQYLg8p98JEODO0AvDBAgwXJ7T7wQIcGfohWECBBguz+l3AgS4M/TCMAECDJfn9DsBAtwZemGYAAGGy3P6nQAB7gy9MEyAAMPlOf1OgAB3hl4YJkCA4fKcfidAgDtDLwwTIMBweU6/EyDAnaEXhgn8A6FZkMFksKEcAAAAAElFTkSuQmCC',
        question:       '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',
        setting:        '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',
        success:        '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',
        warning:        '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',
        danger_colored: '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',
        info_colored:   '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',
        success_colored:'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',
        warning_colored:'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'
    };

    BitWindow.show = function($options) 
    {
        let options = Extend(true, $defaults, $options);
        fire(options);
    };

    function fire(o)
    {
        if(o.target == null) return;

        let hasWindow = BitWindow.current.hasOwnProperty('container')?true:false;
        if(hasWindow) {BitWindow.close(); return;}

        let contents  = findHtmlElement(o.target);
        let clone     = getCloneContents(contents);
        let container = getContainer(o, clone);

        contents.insertAdjacentElement('afterend',container);
        contents.remove();

        if(o.isModal)
        {
            let background = getModalBackground();
            background.addEventListener('click', BitWindow.closeOutClick);
            container.insertAdjacentElement('beforebegin',background);
        }
        else
        {
            event.stopPropagation();
            window.addEventListener('click',BitWindow.closeOutClick);
        }

        if(o.showHeader)
        {
            let header = getHeader(o); 
            if(o.isDrag) dragElement(header, container);
            container.insertAdjacentElement('afterbegin', header);
            clone.style.borderBottomRightRadius = o.cornerRadius;
            clone.style.borderBottomLeftRadius  = o.cornerRadius;
        }
        else
        {
            if(o.isDrag) dragElement(container);
            clone.style.borderRadius = o.cornerRadius;
        }

        setPosition(container, o);
        
        BitWindow.current.contents = contents;
        BitWindow.current.container = container;
    };

    function getContainer(o, clone)
    {
        let container = document.createElement('div');
            container.id = clone.id+'_container';
            container.classList.add('bw-container');
            container.style.display = 'block';
            container.style.borderRadius = o.cornerRadius;
            container.appendChild(clone);
        
        return container;
    };

    function getCloneContents(contents)
    {
        let clone = contents.cloneNode(true);
            clone.id = contents.id;
            clone.classList.add('bw-inner-padding');
            clone.style.display = 'block';

        return clone;
    };

    function getModalBackground()
    {
        let background = document.createElement('div');
            background.classList.add('bw-modal-background');
            background.style.display = 'block';

        BitWindow.current.background = background;
        BitWindow.current.winmode = 'modal';

        return background;
    };

    function getHeader(o) 
    {
        let header  = document.createElement('div');
        let hleft   = document.createElement('div');
        let hright  = document.createElement('div');

        header.classList.add('bw-header');
        header.classList.add('bw-move-cursor');
        header.classList.add('bw-inner-padding');
        header.style.background             = o.headerColor
        header.style.borderTopRightRadius   = o.cornerRadius;
        header.style.borderTopLeftRadius    = o.cornerRadius;

        hleft.classList.add('label-zone');
        hright.classList.add('button-zone')

        if(o.headerIcon != null)
        {
            let icon = document.createElement('img');
                icon.src = 'data:image/png;base64,'+ icons[o.headerIcon];
                icon.style.width = '24px';
                hleft.appendChild(icon);

            header.appendChild(hleft);
        }

        if(typeof(o.headerLabel) === "string")
        {
            let label = document.createElement('div');
                label.innerHTML = o.headerLabel;
                label.style.color = o.headerLabelColor;
                label.style.padding = '0px 5px';
                label.style.alignSelf = 'center';

            hleft.appendChild(label);
            header.appendChild(hleft);
        }

        o.actions = o.actions == null?{icon: 'close', function:()=>BitWindow.close()}:o.actions; 
        o.actions = Array.isArray(o.actions)?o.actions:[o.actions];

        o.actions.forEach(el => 
        {
            let action;
            if(el.hasOwnProperty('icon') && el.icon != null && el.icon != '')
            {
                action = document.createElement('img');
                action.src = 'data:image/png;base64,'+ icons[el.icon];
                action.style.width = '20px';
            }
            action.classList.add('action');
            action.addEventListener('click', el.function);

            hright.appendChild(action);
            
        });

        header.appendChild(hright);

        return header;
    };


    function setPosition(element,o)
    {
        let x=y=0;

        let screenWidth  = window.innerWidth;
        let screenHeight = window.innerHeight;

        let rect = element.getBoundingClientRect();
        let elmWidth  = rect.width;
        let elmHeight = rect.height;

        if(o.position == 'around' && o.clickEvent != null)
        {
            let space = 10;

            let targetRect = o.clickEvent.target.getBoundingClientRect();
            let targetX = targetRect.left;
            let targetY = targetRect.top;
            let targetW = targetRect.width;
            let targetH = targetRect.height;

            x= targetX - elmWidth - space;
            if(x < 0) x= targetX + targetW + space;

            y = targetY - space;
            if(y<0) y = targetY+space;
            else if(y+elmHeight > screenHeight) y= targetY+targetH-elmHeight-space;
        }
        else
        {
            x = (screenWidth - elmWidth) / 2;
            y = (screenHeight - elmHeight) / 2;
        }

        x = x + window.scrollX;
        y = y + window.scrollY;

        element.style.left = `0px`;
        element.style.top  = `0px`;
        element.style.transform = `translate(${x}px, ${y}px)`;
    };

    function dragElement(listenElement, moveElement=null) 
    {

        listenElement.addEventListener('mousedown', dragMouseDown);
        listenElement.addEventListener('touchstart', touchStart);
        if(moveElement == null) moveElement = listenElement;

        let offsetX = 0, offsetY = 0, deltaX = 0, deltaY = 0;

        function dragMouseDown(e) 
        {
            e.preventDefault();

            let rect = moveElement.getBoundingClientRect();
            offsetX = e.clientX - rect.left;
            offsetY = e.clientY - rect.top;

            document.addEventListener('mousemove', dragStart);
            document.addEventListener('mouseup', dragStop);
        }

        function dragStart(e) 
        {
            e.preventDefault();

            deltaX = e.clientX - offsetX;
            deltaY = e.clientY - offsetY;
            deltaX = deltaX + window.scrollX;
            deltaY = deltaY + window.scrollY;

            moveElement.style.transform = `translate(${deltaX}px, ${deltaY}px)`;
        }

        function dragStop(e) 
        {
            document.removeEventListener('mousemove', dragStart);
            document.removeEventListener('mouseup', dragStop);
        }

        function touchStart(e)
        {
            let touch = e.touches[0];
            let rect = moveElement.getBoundingClientRect();
            offsetX = touch.clientX - rect.left;
            offsetY = touch.clientY - rect.top;

            listenElement.addEventListener('touchmove', touchMove);
            listenElement.addEventListener('touchend', touchStop);
        }

        function touchMove(e)
        {
            let touch = e.touches[0];
            e.preventDefault();

            deltaX = touch.clientX - offsetX;
            deltaY = touch.clientY - offsetY;
            deltaX = deltaX + window.scrollX;
            deltaY = deltaY + window.scrollY;
            moveElement.style.transform = `translate(${deltaX}px, ${deltaY}px)`;
        }

        function touchStop(e)
        {
            listenElement.removeEventListener('touchmove', touchMove);
            listenElement.removeEventListener('touchend', touchStop);
        }
    }
    
    BitWindow.close = function()
    {
        let hasWindow  = BitWindow.current.hasOwnProperty('container')?true:false;
        if(!hasWindow) return;

        let hasBackgrd = BitWindow.current.hasOwnProperty('background')?true:false;
        let isModal    = BitWindow.current.winmode=='modal'?true:false;

        BitWindow.current.container.insertAdjacentElement('beforebegin',BitWindow.current.contents);
        BitWindow.current.container.remove();
        if(hasBackgrd) BitWindow.current.background.remove();
        if(!isModal)   window.removeEventListener('click',BitWindow.closeOutClick);

        BitWindow.current = {};
    }
    
    BitWindow.closeOutClick = function(event)
    {
        let hasWindow = BitWindow.current.hasOwnProperty('container')?true:false;
        if(!hasWindow) return;

        let isModal = BitWindow.current.winmode=='modal'?true:false;
        let isContainer = BitWindow.current.container.contains(event.target);

        if(isModal)
        {
            BitWindow.current.container.insertAdjacentElement('beforebegin',BitWindow.current.contents);
            BitWindow.current.container.remove();
            BitWindow.current.background.remove();
            BitWindow.current = {};
        }
        else if(!isModal && !isContainer)
        {
            BitWindow.current.container.insertAdjacentElement('beforebegin',BitWindow.current.contents);
            BitWindow.current.container.remove();
            BitWindow.current = {};
            window.removeEventListener('click',BitWindow.closeOutClick);
        }
    };

    // Pure JS Extend
    // http://gomakethings.com/vanilla-javascript-version-of-jquery-extend/
    let Extend = function() {
        let extended = {};
        let deep = false;
        let i = 0;
        let length = arguments.length;

        if (Object.prototype.toString.call(arguments[0]) === '[object Boolean]') {
            deep = arguments[0];
            i++;
        }

        let merge = function(obj) {
            for (let prop in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, prop)) {
                    if (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {
                        extended[prop] = Extend(true, extended[prop], obj[prop]);
                    } else {
                        extended[prop] = obj[prop];
                    }
                }
            }
        };

        for (; i < length; i++) {
            let obj = arguments[i];
            merge(obj);
        }

        return extended;
    };

    let findHtmlElement = function(element) {
        let el = null;

        if(element instanceof Element) { 
            el = element; 
        }
        else if(typeof element === "string") {
                 if(document.querySelector(element) != null)         el = document.querySelector(element);
            else if(document.getElementById(element) != null)        el = document.getElementById(element);
            else if(document.getElementByClassName(element) != null) el = document.getElementByClassName(element);
        }
        
        return el;
    };

    return BitWindow;
});